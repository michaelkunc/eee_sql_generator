SELECT
OOLA.LINE_ID,
OOLA.INVENTORY_ITEM_ID,
WDD.SHIP_SET_ID,
OOHA.ORDER_NUMBER AS SALES_ORDER_NUMBER,
OS.SET_NAME,
ORDER_CONSTRAINT_FLAG back into the main query
CONCAT(CONCAT(TO_CHAR(OOHA.ORDER_NUMBER),'-'),OS.SET_NAME) AS SALES_ORDER_SET_NAME,
MSIB.STOCK_ENABLED_FLAG,
OOLA.ORDERED_QUANTITY AS ORDERED_QTY,
ONHAND.ONHAND_QTY,
GREATEST(OOLA.ORDERED_QUANTITY - ONHAND.ONHAND_QTY, 0) AS ATO_QUANTITY,
  CASE 
    WHEN MSIB.STOCK_ENABLED_FLAG = 'Y' THEN null
    WHEN GREATEST(OOLA.ORDERED_QUANTITY - ONHAND.ONHAND_QTY, 0) > 0 THEN 'N'
    ELSE 'Y'
  END AS OH_CONSTRAINT,
NVL(ORDER_CONSTRAINT.TEST_COLUMN, 'N') AS ORDER_CONSTRAINT_FLAG


FROM 
APPS.OE_ORDER_LINES_ALL OOLA

INNER JOIN APPS.WSH_DELIVERY_DETAILS WDD
ON OOLA.LINE_ID = WDD.SOURCE_LINE_ID

INNER JOIN APPS.OE_ORDER_HEADERS_ALL OOHA
ON OOLA.HEADER_ID = OOHA.HEADER_ID

INNER JOIN APPS.OE_SETS OS
ON WDD.SHIP_SET_ID = OS.SET_ID

  INNER JOIN (
    SELECT
    MOQD.INVENTORY_ITEM_ID, 
    MOQD.ORGANIZATION_ID, 
    SUM(MOQD.PRIMARY_TRANSACTION_QUANTITY) AS ONHAND_QTY
    FROM 
    APPS.MTL_ONHAND_QUANTITIES_DETAIL MOQD
    GROUP BY MOQD.INVENTORY_ITEM_ID, MOQD.ORGANIZATION_ID
  ) ONHAND
  
ON OOLA.SHIP_FROM_ORG_ID = ONHAND.ORGANIZATION_ID
AND OOLA.INVENTORY_ITEM_ID = ONHAND.INVENTORY_ITEM_ID

INNER JOIN APPS.MTL_SYSTEM_ITEMS_B MSIB
ON OOLA.SHIP_FROM_ORG_ID = MSIB.ORGANIZATION_ID
AND OOLA.INVENTORY_ITEM_ID = MSIB.INVENTORY_ITEM_ID

---this subquery generates a 'Y' or 'N' 
---this is designed to hook into the SALES_ORDER_SET_NAME as a LEFT JOIN
-- And either return a 'Y' or a null. Which is then utilized by the NVL function
--in the select clause. The OH_CONSTANT field above needs to
--come down into this subquery in place of the TEST_COLUMN
LEFT JOIN 
  (
  SELECT DISTINCT
  SALES_ORDER_NUMBER,
  SET_NAME,
  SALES_ORDER_SET_NAME,
  ---------------------
  TEST_COLUMN
  ---------------------
  FROM 
  (
    SELECT
    OOLA.LINE_ID,
    WDD.SHIP_SET_ID,
    OOHA.ORDER_NUMBER AS SALES_ORDER_NUMBER,
    OS.SET_NAME,
    CONCAT(CONCAT(TO_CHAR(OOHA.ORDER_NUMBER),'-'),OS.SET_NAME) AS SALES_ORDER_SET_NAME,
  --this is a test column to generate a Y or N
  --theoretically this would come from the OH_CONSTRAINT but right now all of
  --them are null
    CASE 
      WHEN MOD(OOLA.LINE_ID,2) = 0 THEN 'N'
      ELSE 'Y'
    END AS TEST_COLUMN
  --END TEST COLUMN STUFF

    FROM APPS.WSH_DELIVERY_DETAILS WDD

    INNER JOIN APPS.OE_ORDER_LINES_ALL OOLA
    ON WDD.SOURCE_LINE_ID = OOLA.LINE_ID

    INNER JOIN APPS.OE_ORDER_HEADERS_ALL OOHA
    ON OOLA.HEADER_ID = OOHA.HEADER_ID

    INNER JOIN APPS.OE_SETS OS
    ON WDD.SHIP_SET_ID = OS.SET_ID
    )

  WHERE TEST_COLUMN = 'Y'
  ) ORDER_CONSTRAINT
  ON ORDER_CONSTRAINT.SALES_ORDER_SET_NAME = CONCAT(CONCAT(TO_CHAR(OOHA.ORDER_NUMBER),'-'),OS.SET_NAME)

